#%RAML 0.8
title: Holonic Map Server
version: v1
baseUri: https://hms-mock.united-earth.vision/{version}

securitySchemes:
  - validUserSession:
      description: Some requests require authentication.
      type: x-holonic_map_server-private
      describedBy:
        headers:
          JWT:
            description: JSON Web Token (https://jwt.io/). The token that identifies a valid user session. Get it by doing a POST to /session with valid credentials.
            type: string
            required: true
        responses:
          401:
            body:
              application/json:
                example: |
                  {
                    "status": "Unauthorized"
                  }

/session:
  post:
    description: Login i.e. retrieve JWT (https://jwt.io/)
    queryParameters:
      email:
        type: string
        required: true
      password:
        type: string
        required: true
    responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "jwt": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJ1c2VyX2lkIjoyfQ.YP5otg8vBaJywp2Mik-qYqJfVCilqUa1ZNb1oQTyLFqmbYYIoDm0gpFbxojsGB80It1bXkQlso0q4KgoszOrm6j_ca1gjvgJaZqvdoNvuUXcGqw-lsxwLPCmb4r8yoUoh9FLyqIZ8qFLSuHWN6NE2W2grMenQr8l0edbG2dlGSWFPFfj50IgZwlf7x58Z4r-1F8GDsGVJanjG1U1jyMj_5LP2JraZIl0CZIu16YLA2C01PbuBvNfi0RQJS2xhhb3flwdBm11VZZ4LLSnjB6oexULKJjBTiXqTX6Eo3ku_TbyCJ8GZ4BHScz_MaQnYaP2IYWXWHZGWX77w7fZyovT8A"
                }

/users:
  post:
    description: Create new user
    queryParameters:
      email:
        type: string
        description: must be unique
        required: true
      username:
        type: string
        description: must be unique
        required: true
      password:
        type: string
        required: true
      password_confirmation:
        type: string
        required: true

  # not yet implemented
  #/reset_password:
  #  post:
  #    description: Send logged in user a password reset mail
  #    queryParameters:
  #      email:
  #        type: string
  #        description: must be unique
  #        required: true

/holons:
  post:
    description: Create/post a new holon
    #securedBy: [validUserSession]
    queryParameters:
      data:
        type: string
        description: Holon to save as JSON
        required: true

    responses:
      200:
        body:
          application/json:
            example: |
              {
                "meta": {
                  "errors": [],
                  "validation":[]
                },
                "data": {
                  "hash": "Qmc6c2f19c50c13ff75c30a6199a627aaf38cfe6a38897ff22e09a77f842233ffd"
                }
              }
      #400:
      #  body:
      #    application/json:
      #      example: '{ "_status": "illformatted holon" }'

  /{hash}:
    get:
      description: Get a holon via it's IPFS hash id
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "meta": {
                    "errors":[],
                    "validation":[]
                  },
                  "data": {
                    "hash": "Qmc6c2f19c50c13ff75c30a6199a627aaf38cfe6a38897ff22e09a77f842233ffd",
                    "data": {
                      "_holon_name": "lucksus",
                      "_holon_reated": "20160719_0413",
                      "_holon_precursor": "Qjao39dser3",
                      "_holon_nodes": {
                        "intention1": "Qmasdnlwsakdnt32",
                        "vision1": "Qmasdinwlijsa"
                      }
                      "_holon_edges": [
                        {
                          "type": "contains",
                          "destination": "/home/lucksus/intention1"
                        },
                        {
                          "type": "contains",
                          "destination": "/home/lucksus/vision1"
                        },
                        {
                          "type": "contains",
                          "destination": "/home/lucksus/vision1"
                        },
                        {
                          "type": "manifests",
                          "source": "/home/lucksus/intention1",
                          "destination": "/home/lucksus/vision1"
                        }
                      ]
                    }
                  }
                }




/namespaces:
  /{homepath}:
    get:
      description: Get a holon via it's path name within the H4OME name space ("/home/lucksus/intention1")
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "meta": {
                    "errors":[],
                    "validation":[]
                  },
                  "data": {
                    "_holon_name": "Hello Holon",
                    "_active_holon_lang": "ES6",
                    "_active_holon_function": |
                      _holon.setTitle("Hello World!")
                  }
                }
    put:
      description: |
        Sets/updates the H4OME name registrar for the given pathname
        if the logged in user has wright access to that path
      securedBy: [validUserSession]
      queryParameters:
        path:
          type: string
          required: true
        hash:
          type: string
          required: true
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "meta": {
                    "errors":[],
                    "validation":[]
                  },
                  "data": {
                    "path": "/home/hein23",
                    "hash": "asdfasdfasdfasdf"
                  }
                }
        401:
          body:
            application/json:
              example: |
                {
                  "meta": {
                    "errors":[
                      {
                        "message": "write not allowed"
                      }
                    ],
                    "validation":[]
                  }
                }
